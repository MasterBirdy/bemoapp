{"version":3,"file":"static/webpack/static/development/pages/index.js.2aab3749c7021cdc8dd2.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { initGA, logPageView } from \"../utils/googleAnalytics\";\nimport ReactPixel from \"react-facebook-pixel\";\nimport Head from \"next/head\";\nimport Page from \"../components/Page\";\nimport NavBar from \"../components/NavBar\";\nimport Footer from \"../components/Footer\";\nimport hash from \"object-hash\";\nimport Router from \"next/router\";\nimport ls from \"local-storage\";\n\nexport default function Home({ data }) {\n    useEffect(() => {\n        if (\n            ls.get(\"password\") === null &&\n            ls.get(\"password\") !== \"8188739d9c64226d7f5e79ac13a73b9a2880089d\"\n        ) {\n            Router.replace(\"/login\");\n        }\n    });\n\n    useEffect(() => {\n        if (data.analytics[0].google_analytics) {\n            if (!window.GA_INITIALIZED) {\n                initGA(data.analytics[0].google_analytics);\n                window.GA_INITIALIZED = true;\n            }\n            logPageView();\n        }\n    }, []);\n\n    useEffect(() => {\n        if (data.analytics[0].facebook_analytics) {\n            ReactPixel.init(data.analytics[0].facebook_analytics);\n            ReactPixel.pageView();\n        }\n    });\n\n    if (\n        ls.get(\"password\") === null &&\n        ls.get(\"password\") !== \"8188739d9c64226d7f5e79ac13a73b9a2880089d\"\n    ) {\n        return (\n            <div>\n                <h1>Redirecting...</h1>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"container\">\n            <Head>\n                <title>{data.homes[0].title}</title>\n                {data.homes[0].meta_title && (\n                    <meta\n                        name=\"title\"\n                        content={data.homes[0].meta_title}\n                    ></meta>\n                )}\n                {data.homes[0].meta_description && (\n                    <meta\n                        name=\"description\"\n                        content={data.homes[0].meta_description}\n                    ></meta>\n                )}\n                {data.homes[0].no_index_enabled && (\n                    <meta name=\"robots\" content=\"noindex\"></meta>\n                )}\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n            </Head>\n            <main>\n                <NavBar></NavBar>\n                <Page\n                    title={data.homes[0].title}\n                    content={data.homes[0].content}\n                    image={data.homes[0].image.url}\n                ></Page>\n                <Footer></Footer>\n            </main>\n\n            <style global jsx>{`\n                html,\n                body {\n                    margin: 0;\n                    padding: 0;\n                    font-family: Arial, sans-serif;\n                }\n\n                * {\n                    box-sizing: border-box;\n                }\n            `}</style>\n        </div>\n    );\n}\n\nexport async function getStaticProps(context) {\n    const API_URL = process.env.API_URL || \"http://localhost:1337/graphql\";\n    const res = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            query: `{\n                homes \n                {\n                  id,\n                  title,\n                  meta_title,\n                  meta_description,\n                  no_index_enabled,\n                  content,\n                  image {\n                  url\n                  }\n                },\n                analytics {\n                  id,\n                  google_analytics,\n                  facebook_analytics\n                  }\n              }`,\n        }),\n    });\n\n    const json = await res.json();\n    if (json.errors) {\n        console.error(json.errors);\n        throw new Error(\"Failed\");\n    }\n\n    return {\n        props: {\n            data: json.data,\n        }, // will be passed to the page component as props\n    };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;AAAA;AAAA;AA4CA;;;;A","sourceRoot":""}